version: "3.8"

services:
  #######################################
  #             Edge router            #
  #######################################
  router:
    image: "nginx:alpine"
    volumes:
      - /etc/nginx/.htpasswd:/etc/nginx/.htpasswd:ro
      - /etc/nginx/sites/graviton.pk/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/graviton.pk/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
      - /etc/nginx/sites/graviton.pk/dhparam.pem:/etc/nginx/ssl/ssl-dhparams.pem:ro
      - /etc/letsencrypt/live/graviton.pk/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
    deploy:
      replicas: 1
      mode: replicated
      update_config:
        # delay: 1s
        parallelism: 1
        order: stop-first
      restart_policy:
        condition: on-failure
      # placement:
      #   constraints: [node.role == manager]
    networks:
      - backend
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    ports:
      - "80:80"
      - "443:443"

  #######################################
  #           API BACKEND               #
  #######################################
  api:
    image: u2e:1.0.3-staging
    networks:
      - backend
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        condition: on-failure
    volumes:
      - /opt/u2e/firebase.json:/opt/firebase.json
    environment:
      PORT: 80
      DATABASE_URL: "postgresql://lms:CmE8VbUj852QkC8jmD6ddV8k@postgresql:5432/LMS?schema=public"
      INTERNAL_SERVER_EXCEPTION_MSG: "Something went wrong."
      JWT_SESSION_SECRET: adminadmin
      JWT_SESSION_EXPIRY: 12h
      JWT_REFRESH_TOKEN_SECRET: adminadmin1
      JWT_REFRESH_TOKEN_EXPIRY: 10d
      CLOUDINARY_CLOUD_NAME: dzvrz4pme
      CLOUDINARY_API_KEY: 479995598133472
      CLOUDINARY_API_SECRET: rHi57ylFbsi4qxiQfcN-ml_44jo
      CLOUDINARY_IMAGE_UPLOAD_PRESET: image_upload_preset
      CLOUDINARY_VIDEO_UPLOAD_PRESET: video_upload_preset
      CLOUDINARY_ATTACHEMENTS_UPLOAD_PRESET: attachments_upload_preset
      YOCO_SECRET_KEY: sk_test_1869e4a9mppYkAnedaa46c2a1993
      YOCO_WEBHOOK_SECRET: whsec_RTI1MjBBRkYzRDg4MEJEOEM0REY2MDIyNjY3NTU3NzA=
      FIREBASE_SERVICE_ACCOUNT: /opt/firebase.json
      ETCD_HOSTS: etcd:2379
      REDIS_HOST: redis
      REDIS_INDEX: 1
      REDIS_PORT: 6379

  #######################################
  #           Postgres DB               #
  #######################################
  postgresql:
    image: postgres:15-alpine

    environment:
      POSTGRES_DB: LMS
      POSTGRES_USER: lms
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: CmE8VbUj852QkC8jmD6ddV8k
    volumes:
      - postgres15-volume:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        order: stop-first
      restart_policy:
        condition: on-failure

  #######################################
  #           Pgadmin4                  #
  #######################################
  pgadmin:
    image: dpage/pgadmin4:7.5
    networks:
      - backend
    volumes:
      - pgadmin-volume:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@graviton.pk
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
      PGADMIN_DEFAULT_PASSWORD: 5yKm2mzLkvraS7gn4QEvQ9GF
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        order: stop-first
      restart_policy:
        condition: on-failure

  #######################################
  #              Redis                  #
  #######################################
  redis:
    image: redis:latest
    networks:
      - backend
    volumes:
      - redis_data:/data
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        order: stop-first
      restart_policy:
        condition: on-failure

  #######################################
  #              Redis                  #
  #######################################
  etcd:
    image: bitnami/etcd:latest
    networks:
      - backend
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        order: stop-first
      restart_policy:
        condition: on-failure

#######################################
#           Volumes                   #
#######################################
volumes:
  pgadmin-volume:
  postgres15-volume:
  etcd_data:
  redis_data:

#######################################
#           Networks                  #
#######################################
networks:
  backend:
    driver: overlay
